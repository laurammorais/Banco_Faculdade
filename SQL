CREATE TABLE ALUNO
(
	ra VARCHAR (10) NOT NULL,
	nome VARCHAR (50) NOT NULL,
	cpf VARCHAR (14) NOT NULL,
	data_nasc DATE NOT NULL,
	telfone VARCHAR (14) NOT NULL,
	localidade VARCHAR (50) NOT NULL,
	logradouro VARCHAR (50) NOT NULL,
	numero INT NOT NULL,
	cep VARCHAR (10) NOT NULL,
	bairro VARCHAR (50) NOT NULL,
	uf CHAR (2) NOT NULL,
	complemento VARCHAR(30) NULL,
	CONSTRAINT PK_ALUNO PRIMARY KEY (ra),
	UNIQUE (cpf)
)
CREATE TABLE DISCIPLINA
(
	codigo INT IDENTITY (1,1) NOT NULL,
	nome VARCHAR (50) NOT NULL,
	qtd_aulas INT NOT NULL,
	CONSTRAINT PK_DISCIPLINA PRIMARY KEY (codigo)
)
CREATE TABLE [STATUS]
(
	codigo SMALLINT NOT NULL,
	descricao VARCHAR (20) NOT NULL
	CONSTRAINT PK_STATUS PRIMARY KEY (codigo)
)

INSERT [STATUS]
VALUES (1,'APROVADO'),(2,'RECUPERAÇÃO'),(3, 'REPROVADO POR NOTA'),(4, 'REPROVADO POR FALTA')

CREATE TABLE MATRICULA
(
	ano INT NOT NULL,
	semestre INT NOT NULL,
	nota1 DECIMAL(4, 2) NULL,
	nota2 DECIMAL(4, 2) NULL,
	substitutiva DECIMAL(4, 2) NULL,
	media DECIMAL(4, 2) NULL,
	numero_faltas INT NOT NULL,
	ra_aluno VARCHAR (10) NOT NULL,
	codigo_status SMALLINT NOT NULL,
	codigo_disciplina INT NOT NULL,
	CONSTRAINT PK_MATRICULA PRIMARY KEY (ra_aluno, codigo_disciplina),
	CONSTRAINT FK_MATRICULA_ALUNO FOREIGN KEY (ra_aluno) REFERENCES Aluno(ra),
	CONSTRAINT FK_MATRICULA_DISCIPLINA FOREIGN KEY (codigo_disciplina) REFERENCES Disciplina(codigo),
	CONSTRAINT FK_MATRICULA_STATUS FOREIGN KEY (codigo_status) REFERENCES [Status] (codigo)
)

CREATE TRIGGER CALCULAR_STATUS
ON MATRICULA 
FOR INSERT
AS
BEGIN 
	DECLARE @ra_aluno VARCHAR(10), @codigo_disciplina INT, @media DECIMAL(4,2), @numero_faltas INT, @codigo_status SMALLINT, @frequencia DECIMAL, @qtd_aulas INT

	SELECT @ra_aluno = ra_aluno, @codigo_disciplina = codigo_disciplina, @media = (nota1 + nota2)/2, @numero_faltas = numero_faltas FROM INSERTED
	
	SET @qtd_aulas = (SELECT qtd_aulas FROM DISCIPLINA WHERE codigo = @codigo_disciplina)

	SET @frequencia = (@numero_faltas * 100)/@qtd_aulas

	SET @codigo_status = CASE 
							 WHEN @frequencia>25 THEN 4 
							 WHEN @media < 5 THEN 2
							 ELSE 1
						 END

	UPDATE MATRICULA 
	SET media = @media,
		codigo_status = @codigo_status
	WHERE ra_aluno = @ra_aluno AND codigo_disciplina = @codigo_disciplina

END

CREATE PROCEDURE DISCIPLINA_INSERIR
	@nome VARCHAR(50),
	@qtd_aulas int 
AS 
BEGIN
	INSERT DISCIPLINA VALUES (@nome, @qtd_aulas)
END


CREATE PROC ALUNO_INSERIR
	@ra VARCHAR (10),
	@nome VARCHAR (50),
	@cpf VARCHAR (14),
	@data_nasc DATE,
	@telefone VARCHAR (14),
	@localidade VARCHAR (50),
	@logradouro VARCHAR (50),
	@numero INT,
	@cep VARCHAR (10),
	@bairro VARCHAR (50),
	@uf CHAR (2),
	@complemento VARCHAR(30) = NULL
AS
BEGIN
	INSERT ALUNO VALUES (@ra, @nome, @cpf, @data_nasc, @telefone, @localidade, @logradouro, @numero, @cep, @bairro, @uf, @complemento)
END


CREATE PROC MATRICULA_INSERIR
	@ano INT,
	@semestre INT,
	@nota1 DECIMAL(4,2),
	@nota2 DECIMAL(4,2),
	@numero_faltas INT,
	@ra_aluno VARCHAR (10),
	@codigo_disciplina INT
AS
BEGIN
	INSERT MATRICULA (ano, semestre, nota1, nota2, numero_faltas, ra_aluno, codigo_disciplina) VALUES (@ano, @semestre, @nota1, @nota2, @numero_faltas, @ra_aluno, @codigo_disciplina)
END

CREATE PROC MATRICULA_OBTER
	@ra VARCHAR(10) = NULL
AS
BEGIN
	SELECT A.nome, A.ra, D.nome AS disciplina, M.ano, M.semestre, M.media, S.descricao 
    FROM MATRICULA M
    JOIN ALUNO A ON  A.ra = M.ra_aluno
    JOIN DISCIPLINA D ON D.codigo = M.codigo_disciplina  
    JOIN [STATUS] S ON S.codigo = M.codigo_status 
    WHERE (@ra IS NULL OR A.ra = @ra)
END

CREATE PROC MATRICULA_REALIZAR_SUBSTITUTIVA
	@ra VARCHAR(10),
	@codigo_disciplina INT,
	@substitutiva DECIMAL(4,2)
AS
BEGIN
	DECLARE @nota1 DECIMAL(4,2) = (SELECT nota1 FROM MATRICULA WHERE codigo_disciplina = @codigo_disciplina AND ra_aluno = @ra),
		    @nota2 DECIMAL(4,2) = (SELECT nota2 FROM MATRICULA WHERE codigo_disciplina = @codigo_disciplina AND ra_aluno = @ra)

	IF((SELECT codigo_status FROM MATRICULA WHERE codigo_disciplina = @codigo_disciplina AND ra_aluno = @ra) = 2) 
	BEGIN
		IF(@nota1 >= @nota2)
		  UPDATE MATRICULA
		  SET nota2 = NULL,
			  substitutiva = @substitutiva,
			  media = (@nota1 + @substitutiva)/2,
			  codigo_status = CASE
								WHEN (@nota1 + @substitutiva)/2 >= 5 THEN 1
								ELSE 3
							  END
		  WHERE ra_aluno = @ra AND codigo_disciplina = @codigo_disciplina
		ELSE
		  UPDATE MATRICULA
		  SET nota1 = NULL,
			  substitutiva = @substitutiva,
			  media = (@nota2 + @substitutiva)/2,
			  codigo_status = CASE
								WHEN (@nota2 + @substitutiva)/2 >= 5 THEN 1
								ELSE 3
							  END
		  WHERE ra_aluno = @ra AND codigo_disciplina = @codigo_disciplina
	END
	ELSE
		PRINT 'PARA REALIZAR A PROVA SUBSTITUTIVA, O ALUNO DEVE ESTAR EM RECUPERAÇÃO!'
END

EXEC DISCIPLINA_INSERIR @nome = 'DIREITO PENAL', @qtd_aulas = 35

EXEC ALUNO_INSERIR @ra = '4321', @nome = 'JOSE', @cpf = '321.654.987-00', @data_nasc = '2000-01-20', @telefone = '(16)99788-6655', @localidade = 'ARARAQUARA', @logradouro = 'RUA SAPÃO', @numero = 1234, @cep = '14830-420', @bairro = 'VILA HARMONIA', @uf = 'SP'

EXEC MATRICULA_INSERIR @ano = 2022, @semestre = 1, @nota1 = 3, @nota2 = 5, @numero_faltas = 2, @ra_aluno = '4321', @codigo_disciplina = 2

EXEC MATRICULA_OBTER @ra = '4321'

EXEC MATRICULA_REALIZAR_SUBSTITUTIVA @ra = '4321', @codigo_disciplina = 6, @substitutiva = 3

